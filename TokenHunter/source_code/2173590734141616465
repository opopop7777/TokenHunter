{"Compensation.sol":{"content":"/*Contract For Transmission (TMN) [tmission.io] Members Compensation*/\n\npragma solidity 0.4.21;\n\nimport \"./List.sol\";\n\n\ncontract Compensation {\n    address public admin1;\n    address public admin2;\n    uint256 public unlockerBlockNumber;\n    string public message;\n    bool public admin1IsLive;\n\n    List public listContract;\n\n    mapping(address =\u003e bool) public compensationCompleteOf;\n\n    modifier onlyAdmin1 {\n        require(msg.sender == admin1);\n        _;\n    }\n\n    modifier onlyAdmin2 {\n        require(msg.sender == admin2);\n        _;\n    }\n\n    modifier afterDeadline {\n        require(block.number \u003e= unlockerBlockNumber);\n        _;\n    }\n\n    function Compensation(\n    address admin1Address,\n    address admin2Address,\n    uint256 blockNumber\n    ) public {\n        admin1 = admin1Address;\n        admin2 = admin2Address;\n        unlockerBlockNumber = blockNumber;\n        admin1IsLive = false;\n    }\n\n    function () public payable {}\n\n    function getCompensation()\n    public {\n        address recipient = msg.sender;\n        require(!compensationCompleteOf[recipient]);\n        uint256 compensationAmount = listContract.balanceOf(recipient);\n        compensationCompleteOf[recipient] = true;\n        recipient.transfer(compensationAmount);\n    }\n\n    function transferOwnershipOfAdmin1(address newAdmin)\n    public onlyAdmin1 {\n        admin1 = newAdmin;\n    }\n\n    function checkAdmin1()\n    public onlyAdmin1 {\n        admin1IsLive = true;\n    }\n\n    function withdrawCompensationFunds(uint256 amount)\n    public onlyAdmin1 afterDeadline {\n        admin1.transfer(amount);\n    }\n\n    function transferOwnershipOfAdmin2(address newAdmin)\n    public onlyAdmin2 {\n        admin2 = newAdmin;\n    }\n\n    function changeList(address newListAddress)\n    public onlyAdmin2 {\n        listContract = List(newListAddress);\n    }\n\n    function changeMessage(string newMessage)\n    public onlyAdmin2 {\n        message = newMessage;\n    }\n}\n"},"List.sol":{"content":"pragma solidity 0.4.21;\n\n\ncontract List {\n    function balanceOf(address member) public constant returns (uint256);\n}\n"}}